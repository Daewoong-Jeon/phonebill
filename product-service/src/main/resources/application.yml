spring:
  application:
    name: product-service
    version: 1.0.0
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:product_change}
    username: ${DB_USERNAME:product_user}
    password: ${DB_PASSWORD:product_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  # JPA 설정
  jpa:
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        connection:
          provider_disables_autocommit: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${DDL_AUTO:update}

  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1
      database: ${REDIS_DATABASE:2}

  # Cache 개발 설정 (TTL 단축)
  cache:
    redis:
      time-to-live: 3600000 # 1시간 (개발환경에서 단축)

# Server 개발 설정
server:
  port: ${SERVER_PORT:8083}
  # HTTP 헤더 크기 제한 설정
  max-http-header-size: 64KB
  max-http-request-header-size: 64KB
  error:
    include-stacktrace: always
    include-message: always
    include-binding-errors: always

  # Jackson 설정
  jackson:
    serialization:
      write-dates-as-timestamps: false
      write-durations-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
      adjust-dates-to-context-time-zone: false
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd'T'HH:mm:ss

# CORS
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# JWT 토큰 설정
jwt:
  secret: ${JWT_SECRET:}
  access-token-validity: ${JWT_ACCESS_TOKEN_VALIDITY:1800000}
  refresh-token-validity: ${JWT_REFRESH_TOKEN_VALIDITY:86400000}

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

# OpenAPI/Swagger 설정
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: false
  group-configs:
    - group: product-service
      display-name: Product Change Service API
      paths-to-match: /products/**

# Resilience4j 기본 설정
resilience4j:
  circuitbreaker:
    configs:
      default:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 3s
        permitted-number-of-calls-in-half-open-state: 3
        minimum-number-of-calls: 5
        wait-duration-in-open-state: 10s
        sliding-window-type: count-based
        sliding-window-size: 10
        record-exceptions:
          - java.net.ConnectException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
          - jakarta.validation.ValidationException
    instances:
      kosClient:
        base-config: default
        failure-rate-threshold: 60
        wait-duration-in-open-state: 30s
        
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.net.ConnectException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
    instances:
      kosClient:
        base-config: default
        max-attempts: 2
        wait-duration: 2s
        
  timelimiter:
    configs:
      default:
        timeout-duration: 5s
    instances:
      kosClient:
        base-config: default
        timeout-duration: 10s

# KOS Mock 서버 설정
kos:
  base-url: ${KOS_BASE_URL:http://localhost:9090}
  connect-timeout: ${KOS_CONNECT_TIMEOUT:5000}
  read-timeout: ${KOS_READ_TIMEOUT:10000}
  max-retries: ${KOS_MAX_RETRIES:3}
  retry-delay: ${KOS_RETRY_DELAY:1000}

  # Circuit Breaker 설정
  circuit-breaker:
    failure-rate-threshold: ${KOS_CB_FAILURE_RATE:0.5}
    slow-call-duration-threshold: ${KOS_CB_SLOW_CALL_THRESHOLD:10000}
    slow-call-rate-threshold: ${KOS_CB_SLOW_CALL_RATE:0.5}
    sliding-window-size: ${KOS_CB_SLIDING_WINDOW_SIZE:10}
    minimum-number-of-calls: ${KOS_CB_MIN_CALLS:5}
    permitted-number-of-calls-in-half-open-state: ${KOS_CB_HALF_OPEN_CALLS:3}
    wait-duration-in-open-state: ${KOS_CB_WAIT_DURATION:60000}


# Logging 운영 설정
logging:
  level:
    root: WARN
    com.unicorn.phonebill: INFO
    com.phonebill.common.security: DEBUG
    org.springframework.security: DEBUG
    org.hibernate: WARN
    org.hibernate.resource.transaction: ERROR
    org.hibernate.internal: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  file:
    name: logs/product-service.log
    max-size: 500MB
    max-history: 30
    total-size-cap: 10GB
  logback:
    rollingpolicy:
      clean-history-on-start: true

