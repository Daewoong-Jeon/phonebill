# 통신요금 관리 서비스 - Bill Service 개발환경 설정
# 개발자 편의성과 디버깅을 위한 설정
#
# @author 이개발(백엔더)
# @version 1.0.0
# @since 2025-09-08

spring:
  datasource:
    url: jdbc:${DB_KIND:postgresql}://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:bill_inquiry_db}
    username: ${DB_USERNAME:bill_inquiry_user}
    password: ${DB_PASSWORD:BillUser2025!}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000      
  # JPA 설정
  jpa:
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
      
  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:Redis2025Dev!}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
      database: ${REDIS_DATABASE:1}
  
  # 캐시 설정 (개발환경 - 짧은 TTL)
  cache:
    redis:
      time-to-live: 300000  # 5분

# 서버 설정 (개발환경)
server:
  port: ${SERVER_PORT:8082}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: always  # 개발환경에서는 스택트레이스 포함
    include-exception: true     # 예외 정보 포함

# 액추에이터 설정 (개발환경)
management:
  endpoints:
    web:
      exposure:
        include: "*"  # 개발환경에서는 모든 엔드포인트 노출
  endpoint:
    health:
      show-details: always
      show-components: always
  security:
    enabled: false  # 개발환경에서는 액추에이터 보안 비활성화

# KOS 시스템 연동 설정 (개발환경)
kos:
  base-url: http://localhost:9090  # 로컬 KOS Mock 서버
  connect-timeout: 3000
  read-timeout: 10000
  max-retries: 2
  retry-delay: 500
  
  # Circuit Breaker 설정 (개발환경 - 관대한 설정)
  circuit-breaker:
    failure-rate-threshold: 0.7     # 70% 실패율
    slow-call-duration-threshold: 15000  # 15초
    slow-call-rate-threshold: 0.7   # 70% 느린 호출
    sliding-window-size: 5          # 작은 윈도우
    minimum-number-of-calls: 3      # 적은 최소 호출
    permitted-number-of-calls-in-half-open-state: 2
    wait-duration-in-open-state: 30000  # 30초
  
  # 인증 설정 (개발환경)
  authentication:
    enabled: false  # 개발환경에서는 인증 비활성화
    api-key: dev-api-key
    secret-key: dev-secret-key
    token-expiration-seconds: 7200  # 2시간
  
  # 모니터링 설정 (개발환경)
  monitoring:
    performance-logging-enabled: true
    slow-request-threshold: 1000    # 1초 (더 민감한 감지)
    metrics-enabled: true
    health-check-interval: 10000    # 10초

# 로깅 설정 (개발환경)
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    com.phonebill: ${LOG_LEVEL_APP:DEBUG}            # 애플리케이션 로그 디버그 레벨
    com.phonebill.bill.service: DEBUG
    com.phonebill.bill.repository: DEBUG
    org.springframework.cache: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG       # SQL 쿼리 로그
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # SQL 파라미터 로그
    io.github.resilience4j: DEBUG
    redis.clients.jedis: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  file:
    name: ${LOG_FILE_NAME:logs/bill-service.log}
    max-size: 50MB
    max-history: 7  # 개발환경에서는 7일만 보관

# Swagger 설정 (개발환경)
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    tags-sorter: alpha
    operations-sorter: alpha
    display-request-duration: true
    default-models-expand-depth: 2
    default-model-expand-depth: 2
    try-it-out-enabled: true
    filter: true
    doc-expansion: list
  show-actuator: true

# 개발환경 전용 설정
debug: false  # Spring Boot 디버그 모드

# 개발편의를 위한 프로파일 정보
---
spring:
  config:
    activate:
      on-profile: dev

# 개발환경 정보
info:
  environment: development
  debug:
    enabled: true
  database:
    name: bill_service_dev
    host: localhost
    port: 3306
  redis:
    host: localhost
    port: 6379
    database: 1
  kos:
    host: localhost
    port: 9090
    mock: true